plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp' version '1.9.23-1.0.20'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}

android {
    namespace 'com.kire.audio'
    compileSdk 34

    defaultConfig {
        applicationId "com.kire.audio"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true

            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
            versionNameSuffix = "-debug"
            applicationIdSuffix = ".debug"
            signingConfig = signingConfigs.getByName("debug")
        }

        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
        beta {
            minifyEnabled true
            shrinkResources true

            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
            versionNameSuffix = "-beta4"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.12'
    }
    packaging {
        resources.excludes.addAll('/META-INF/{AL2.0,LGPL2.1}', 'META-INF/INDEX.LIST', 'META-INF/io.netty.versions.properties')
    }
}

ext {
    roomVersion = "2.6.1"
    daggerHiltVersion = "2.51.1"
    coilVersion = "2.6.0"
    dataStoreVersion = "1.1.1"
    jsoupVersion = "1.13.1"
    lifecycleRuntimeVersion = "2.8.5"
    materialIconsExtendedVersion = "1.7.2"
    media3Version = "1.4.1"
    composeDestinationsVersion = "1.10.2"
    coreKtxVersion = "1.13.1"
    activityComposeVersion = "1.9.2"
    material3Version = "1.3.0"
    composeUiVersion = "1.7.2"
    accompanistPermissionsVersion = "0.20.0"
    accompainstSystemUiControllerVersion = "0.31.2-alpha"
}

dependencies {

    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleRuntimeVersion"

    /**
     * Jetpack Compose
     * */
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycleRuntimeVersion"
    implementation "androidx.activity:activity-compose:$activityComposeVersion"
    implementation "androidx.compose.ui:ui:$composeUiVersion"

    /** Material3 */
    implementation "androidx.compose.material3:material3:$material3Version"

    /** JSoup для вытягивания HTML разметки сайтов */
    implementation "org.jsoup:jsoup:$jsoupVersion"

    /**
     * Для запроса разрешений
     */
    implementation "com.google.accompanist:accompanist-permissions:$accompanistPermissionsVersion"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompainstSystemUiControllerVersion"

    /** Coil для асинхронной отрисовки изображений */
    implementation "io.coil-kt:coil-compose:$coilVersion"

    /**
     * Room для хранения информации о треках
     */
    implementation "androidx.room:room-runtime:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-paging:$roomVersion"

    /** DataStore для хранения настроек */
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"

    /**
     * Dagger Hilt для DI
     */
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    kapt "com.google.dagger:hilt-compiler:$daggerHiltVersion"

    /** Расширенный пак иконок Material Design */
    implementation "androidx.compose.material:material-icons-extended:$materialIconsExtendedVersion"

    /**
     * Media3 для управления воспроизведением
     */
    implementation "androidx.media3:media3-exoplayer:$media3Version"
    implementation "androidx.media3:media3-session:$media3Version"

    /**
     * Compose Destinations - 3rd party библиотека для навигации
     */
    implementation "io.github.raamcosta.compose-destinations:animations-core:$composeDestinationsVersion"
    ksp "io.github.raamcosta.compose-destinations:ksp:$composeDestinationsVersion"
}

kapt {
    correctErrorTypes true
}
